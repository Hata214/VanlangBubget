import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
    try {
        const { message } = await request.json();

        if (!message) {
            return NextResponse.json({
                success: false,
                error: 'Message is required'
            }, { status: 400 });
        }

        // Simple chatbot responses for testing
        const lowerMessage = message.toLowerCase().trim();
        let response = '';

        // Greeting responses
        if (lowerMessage.includes('ch√†o') || lowerMessage.includes('hello') || lowerMessage.includes('hi')) {
            const currentHour = new Date().getHours();
            let greeting = '';

            if (currentHour < 12) {
                greeting = 'Ch√†o bu·ªïi s√°ng!';
            } else if (currentHour < 18) {
                greeting = 'Ch√†o bu·ªïi chi·ªÅu!';
            } else {
                greeting = 'Ch√†o bu·ªïi t·ªëi!';
            }

            response = `${greeting} üëã T√¥i l√† VanLangBot, tr·ª£ l√Ω t√†i ch√≠nh th√¥ng minh c·ªßa ·ª©ng d·ª•ng VanLang Budget. T√¥i c√≥ th·ªÉ gi√∫p b·∫°n:

‚Ä¢ üí∞ Qu·∫£n l√Ω thu nh·∫≠p v√† chi ti√™u
‚Ä¢ üìä Ph√¢n t√≠ch t√†i ch√≠nh c√° nh√¢n
‚Ä¢ üè¶ Theo d√µi kho·∫£n vay v√† n·ª£
‚Ä¢ üìà Qu·∫£n l√Ω ƒë·∫ßu t∆∞
‚Ä¢ üí° ƒê∆∞a ra g·ª£i √Ω ti·∫øt ki·ªám

H√£y h·ªèi t√¥i b·∫•t c·ª© ƒëi·ªÅu g√¨ v·ªÅ t√†i ch√≠nh nh√©! üòä`;
        }
        // Bot introduction
        else if (lowerMessage.includes('b·∫°n l√† ai') || lowerMessage.includes('gi·ªõi thi·ªáu')) {
            response = `ü§ñ T√¥i l√† VanLangBot - tr·ª£ l√Ω t√†i ch√≠nh AI th√¥ng minh!

‚ú® **Kh·∫£ nƒÉng c·ªßa t√¥i:**
‚Ä¢ üìä Ph√¢n t√≠ch d·ªØ li·ªáu t√†i ch√≠nh chi ti·∫øt
‚Ä¢ üí° ƒê∆∞a ra g·ª£i √Ω th√¥ng minh v·ªÅ qu·∫£n l√Ω ti·ªÅn
‚Ä¢ üßÆ T√≠nh to√°n l√£i su·∫•t, ROI, d·ª± ƒëo√°n xu h∆∞·ªõng
‚Ä¢ üè¶ H·ªó tr·ª£ qu·∫£n l√Ω kho·∫£n vay v√† ƒë·∫ßu t∆∞
‚Ä¢ üìà So s√°nh v√† ph√¢n t√≠ch theo th·ªùi gian

üéØ **M·ª•c ti√™u:** Gi√∫p b·∫°n qu·∫£n l√Ω t√†i ch√≠nh hi·ªáu qu·∫£ v√† ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u t√†i ch√≠nh c√° nh√¢n!

T√¥i ƒë∆∞·ª£c ph√°t tri·ªÉn b·ªüi ƒë·ªôi ng≈© VanLang Budget v·ªõi c√¥ng ngh·ªá AI ti√™n ti·∫øn. H√£y th·ª≠ h·ªèi t√¥i v·ªÅ t√¨nh h√¨nh t√†i ch√≠nh c·ªßa b·∫°n! üí™`;
        }
        // Time query
        else if (lowerMessage.includes('m·∫•y gi·ªù') || lowerMessage.includes('th·ªùi gian')) {
            const now = new Date();
            const vietnamTime = now.toLocaleString('vi-VN', {
                timeZone: 'Asia/Ho_Chi_Minh',
                weekday: 'long',
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
            });

            response = `üïê **Th·ªùi gian hi·ªán t·∫°i t·∫°i Vi·ªát Nam:**

${vietnamTime}

‚è∞ ƒê√¢y l√† th·ªùi gian t·ªët ƒë·ªÉ:
‚Ä¢ Ki·ªÉm tra t√†i ch√≠nh h√†ng ng√†y
‚Ä¢ L·∫≠p k·∫ø ho·∫°ch chi ti√™u
‚Ä¢ Theo d√µi m·ª•c ti√™u ti·∫øt ki·ªám

B·∫°n c√≥ mu·ªën t√¥i gi√∫p ph√¢n t√≠ch t√¨nh h√¨nh t√†i ch√≠nh hi·ªán t·∫°i kh√¥ng? üìä`;
        }
        // Capability inquiry
        else if (lowerMessage.includes('l√†m ƒë∆∞·ª£c g√¨') || lowerMessage.includes('gi√∫p g√¨') || lowerMessage.includes('ch·ª©c nƒÉng')) {
            response = `üöÄ **VanLangBot c√≥ th·ªÉ gi√∫p b·∫°n:**

üí∞ **Qu·∫£n l√Ω Thu Chi:**
‚Ä¢ Ph√¢n t√≠ch thu nh·∫≠p v√† chi ti√™u theo danh m·ª•c
‚Ä¢ So s√°nh xu h∆∞·ªõng theo th√°ng/nƒÉm
‚Ä¢ ƒê∆∞a ra g·ª£i √Ω t·ªëi ∆∞u h√≥a ng√¢n s√°ch

üìà **ƒê·∫ßu t∆∞ & Ti·∫øt ki·ªám:**
‚Ä¢ Theo d√µi hi·ªáu qu·∫£ ƒë·∫ßu t∆∞ (c·ªï phi·∫øu, v√†ng, crypto)
‚Ä¢ T√≠nh to√°n ROI v√† l·ª£i nhu·∫≠n
‚Ä¢ G·ª£i √Ω chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞

üè¶ **Qu·∫£n l√Ω N·ª£:**
‚Ä¢ Ph√¢n t√≠ch t·ªïng kho·∫£n vay
‚Ä¢ T√≠nh to√°n l√£i su·∫•t v√† k·∫ø ho·∫°ch tr·∫£ n·ª£
‚Ä¢ G·ª£i √Ω t·ªëi ∆∞u h√≥a vi·ªác tr·∫£ n·ª£

üßÆ **T√≠nh to√°n T√†i ch√≠nh:**
‚Ä¢ D·ª± ƒëo√°n chi ti√™u t∆∞∆°ng lai
‚Ä¢ T√≠nh to√°n m·ª•c ti√™u ti·∫øt ki·ªám
‚Ä¢ Ph√¢n t√≠ch kh·∫£ nƒÉng t√†i ch√≠nh

H√£y th·ª≠ h·ªèi: "T·ªïng kho·∫£n vay c·ªßa t√¥i l√† bao nhi√™u?" ho·∫∑c "Ph√¢n t√≠ch chi ti√™u th√°ng n√†y" üí°`;
        }
        // Farewell
        else if (lowerMessage.includes('c·∫£m ∆°n') || lowerMessage.includes('t·∫°m bi·ªát') || lowerMessage.includes('bye')) {
            response = `üôè C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng VanLangBot!

‚ú® T√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ b·∫°n 24/7 trong vi·ªác qu·∫£n l√Ω t√†i ch√≠nh c√° nh√¢n.

üí° **L·ªùi khuy√™n cu·ªëi:** H√£y th∆∞·ªùng xuy√™n theo d√µi t√¨nh h√¨nh t√†i ch√≠nh ƒë·ªÉ ƒë·∫°t ƒë∆∞·ª£c m·ª•c ti√™u c·ªßa m√¨nh!

Ch√∫c b·∫°n c√≥ m·ªôt ng√†y tuy·ªát v·ªùi v√† th√†nh c√¥ng trong vi·ªác qu·∫£n l√Ω t√†i ch√≠nh! üåü

H·∫πn g·∫∑p l·∫°i b·∫°n s·ªõm! üëã`;
        }
        // Financial queries - Advanced intent recognition
        else if (lowerMessage.includes('t·ªïng kho·∫£n vay') || lowerMessage.includes('kho·∫£n vay') || lowerMessage.includes('n·ª£')) {
            response = `üè¶ **Th√¥ng tin kho·∫£n vay c·ªßa b·∫°n:**

ƒê·ªÉ cung c·∫•p th√¥ng tin ch√≠nh x√°c v·ªÅ kho·∫£n vay, t√¥i c·∫ßn truy c·∫≠p d·ªØ li·ªáu t·ª´ h·ªá th·ªëng. Hi·ªán t·∫°i t√¥i ƒëang trong ch·∫ø ƒë·ªô demo.

üí° **T√¥i c√≥ th·ªÉ gi√∫p b·∫°n:**
‚Ä¢ üìä Ph√¢n t√≠ch t·ªïng kho·∫£n vay hi·ªán t·∫°i
‚Ä¢ üßÆ T√≠nh to√°n l√£i su·∫•t v√† k·∫ø ho·∫°ch tr·∫£ n·ª£
‚Ä¢ üìà So s√°nh c√°c kho·∫£n vay kh√°c nhau
‚Ä¢ üí∞ G·ª£i √Ω t·ªëi ∆∞u h√≥a vi·ªác tr·∫£ n·ª£
‚Ä¢ üìã L·∫≠p k·∫ø ho·∫°ch t√†i ch√≠nh ƒë·ªÉ tr·∫£ n·ª£ s·ªõm

**H√£y th·ª≠ h·ªèi c·ª• th·ªÉ h∆°n:**
‚Ä¢ "Chi ti·∫øt t·ª´ng kho·∫£n vay c·ªßa t√¥i"
‚Ä¢ "L√£i su·∫•t kho·∫£n vay n√†o cao nh·∫•t?"
‚Ä¢ "K·∫ø ho·∫°ch tr·∫£ n·ª£ t·ªëi ∆∞u"`;
        }
        else if (lowerMessage.includes('thu nh·∫≠p') || lowerMessage.includes('l∆∞∆°ng') || lowerMessage.includes('income')) {
            response = `üí∞ **Ph√¢n t√≠ch thu nh·∫≠p:**

T√¥i c√≥ th·ªÉ gi√∫p b·∫°n ph√¢n t√≠ch v√† qu·∫£n l√Ω thu nh·∫≠p hi·ªáu qu·∫£!

üìä **C√°c d·ªãch v·ª• ph√¢n t√≠ch thu nh·∫≠p:**
‚Ä¢ üìà Theo d√µi xu h∆∞·ªõng thu nh·∫≠p theo th√°ng
‚Ä¢ üéØ So s√°nh v·ªõi m·ª•c ti√™u ƒë√£ ƒë·∫∑t ra
‚Ä¢ üí° G·ª£i √Ω t·ªëi ∆∞u h√≥a ngu·ªìn thu nh·∫≠p
‚Ä¢ üìã Ph√¢n lo·∫°i thu nh·∫≠p theo ngu·ªìn
‚Ä¢ ÔøΩ T√≠nh to√°n thu nh·∫≠p r√≤ng sau thu·∫ø

**H√£y th·ª≠ h·ªèi:**
‚Ä¢ "Thu nh·∫≠p th√°ng n√†y c·ªßa t√¥i"
‚Ä¢ "So s√°nh thu nh·∫≠p th√°ng n√†y v·ªõi th√°ng tr∆∞·ªõc"
‚Ä¢ "Ph√¢n t√≠ch ngu·ªìn thu nh·∫≠p ch√≠nh"`;
        }
        else if (lowerMessage.includes('chi ti√™u') || lowerMessage.includes('chi ph√≠') || lowerMessage.includes('expense')) {
            response = `üí∏ **Ph√¢n t√≠ch chi ti√™u th√¥ng minh:**

T√¥i s·∫Ω gi√∫p b·∫°n ki·ªÉm so√°t v√† t·ªëi ∆∞u h√≥a chi ti√™u!

üìä **D·ªãch v·ª• ph√¢n t√≠ch chi ti√™u:**
‚Ä¢ üè∑Ô∏è Ph√¢n lo·∫°i chi ti√™u theo danh m·ª•c
‚Ä¢ üìà Theo d√µi xu h∆∞·ªõng chi ti√™u
‚Ä¢ ‚ö†Ô∏è C·∫£nh b√°o chi ti√™u v∆∞·ª£t ng√¢n s√°ch
‚Ä¢ üí° G·ª£i √Ω ti·∫øt ki·ªám th√¥ng minh
‚Ä¢ üìã So s√°nh chi ti√™u theo th·ªùi gian

**V√≠ d·ª• c√¢u h·ªèi:**
‚Ä¢ "Chi ti√™u th√°ng n√†y nh∆∞ th·∫ø n√†o?"
‚Ä¢ "Danh m·ª•c n√†o t√¥i chi nhi·ªÅu nh·∫•t?"
‚Ä¢ "G·ª£i √Ω gi·∫£m chi ti√™u"`;
        }
        else if (lowerMessage.includes('ƒë·∫ßu t∆∞') || lowerMessage.includes('investment') || lowerMessage.includes('c·ªï phi·∫øu')) {
            response = `üìà **Qu·∫£n l√Ω ƒë·∫ßu t∆∞ th√¥ng minh:**

T√¥i s·∫Ω h·ªó tr·ª£ b·∫°n theo d√µi v√† ph√¢n t√≠ch hi·ªáu qu·∫£ ƒë·∫ßu t∆∞!

üíº **D·ªãch v·ª• ƒë·∫ßu t∆∞:**
‚Ä¢ üìä Theo d√µi danh m·ª•c ƒë·∫ßu t∆∞
‚Ä¢ üßÆ T√≠nh to√°n ROI v√† l·ª£i nhu·∫≠n
‚Ä¢ üìà Ph√¢n t√≠ch xu h∆∞·ªõng th·ªã tr∆∞·ªùng
‚Ä¢ ‚öñÔ∏è ƒê√°nh gi√° r·ªßi ro ƒë·∫ßu t∆∞
‚Ä¢ üí° G·ª£i √Ω chi·∫øn l∆∞·ª£c ƒë·∫ßu t∆∞

**Lo·∫°i ƒë·∫ßu t∆∞ ƒë∆∞·ª£c h·ªó tr·ª£:**
‚Ä¢ üè¢ C·ªï phi·∫øu (VN30, HNX...)
‚Ä¢ üè† B·∫•t ƒë·ªông s·∫£n
‚Ä¢ üè¶ Ti·∫øt ki·ªám ng√¢n h√†ng
‚Ä¢ üí∞ V√†ng v√† kim lo·∫°i qu√Ω

**H√£y h·ªèi:**
‚Ä¢ "Hi·ªáu qu·∫£ ƒë·∫ßu t∆∞ c·ªßa t√¥i"
‚Ä¢ "Ph√¢n t√≠ch danh m·ª•c ƒë·∫ßu t∆∞"`;
        }
        else if (lowerMessage.includes('ti·∫øt ki·ªám') || lowerMessage.includes('saving') || lowerMessage.includes('m·ª•c ti√™u')) {
            response = `üíé **K·∫ø ho·∫°ch ti·∫øt ki·ªám th√¥ng minh:**

T√¥i s·∫Ω gi√∫p b·∫°n x√¢y d·ª±ng k·∫ø ho·∫°ch ti·∫øt ki·ªám hi·ªáu qu·∫£!

üéØ **D·ªãch v·ª• ti·∫øt ki·ªám:**
‚Ä¢ üìä Ph√¢n t√≠ch kh·∫£ nƒÉng ti·∫øt ki·ªám
‚Ä¢ üéØ Thi·∫øt l·∫≠p m·ª•c ti√™u ti·∫øt ki·ªám
‚Ä¢ üìà Theo d√µi ti·∫øn ƒë·ªô ti·∫øt ki·ªám
‚Ä¢ üí° G·ª£i √Ω t·ªëi ∆∞u h√≥a ti·∫øt ki·ªám
‚Ä¢ üßÆ T√≠nh to√°n th·ªùi gian ƒë·∫°t m·ª•c ti√™u

**V√≠ d·ª• m·ª•c ti√™u:**
‚Ä¢ üè† Mua nh√†, ƒë·∫•t
‚Ä¢ üöó Mua xe
‚Ä¢ üéì H·ªçc ph√≠ con em
‚Ä¢ üèñÔ∏è Du l·ªãch, ngh·ªâ d∆∞·ª°ng
‚Ä¢ üí∞ Qu·ªπ kh·∫©n c·∫•p

**H√£y th·ª≠:**
‚Ä¢ "T√¥i mu·ªën ti·∫øt ki·ªám 100 tri·ªáu"
‚Ä¢ "K·∫ø ho·∫°ch ti·∫øt ki·ªám mua nh√†"`;
        }
        // Default response - More helpful
        else {
            response = `ü§ñ **Xin ch√†o! T√¥i l√† VanLangBot - tr·ª£ l√Ω t√†i ch√≠nh AI c·ªßa b·∫°n!**

üéØ **B·∫°n c√≥ th·ªÉ h·ªèi t√¥i v·ªÅ:**
‚Ä¢ üí∞ **Thu nh·∫≠p v√† chi ti√™u** c·ªßa b·∫°n
‚Ä¢ üè¶ **T√¨nh h√¨nh kho·∫£n vay v√† n·ª£**
‚Ä¢ üìà **Hi·ªáu qu·∫£ ƒë·∫ßu t∆∞**
‚Ä¢ üíé **K·∫ø ho·∫°ch ti·∫øt ki·ªám**
‚Ä¢ üìä **Ph√¢n t√≠ch t√†i ch√≠nh**

‚≠ê **V√≠ d·ª• c√¢u h·ªèi:**
‚Ä¢ "T·ªïng kho·∫£n vay c·ªßa t√¥i l√† bao nhi√™u?"
‚Ä¢ "Chi ti√™u th√°ng n√†y nh∆∞ th·∫ø n√†o?"
‚Ä¢ "Ph√¢n t√≠ch ƒë·∫ßu t∆∞ c·ªßa t√¥i"
‚Ä¢ "T√¥i c√≥ th·ªÉ ti·∫øt ki·ªám bao nhi√™u?"
‚Ä¢ "Thu nh·∫≠p th√°ng n√†y ra sao?"

üí° **M·∫πo:** H√£y h·ªèi c·ª• th·ªÉ ƒë·ªÉ t√¥i c√≥ th·ªÉ h·ªó tr·ª£ b·∫°n t·ªët nh·∫•t!

B·∫°n mu·ªën b·∫Øt ƒë·∫ßu v·ªõi ch·ªß ƒë·ªÅ n√†o? üòä`;
        }

        return NextResponse.json({
            success: true,
            response,
            timestamp: new Date().toISOString(),
            intent: 'detected',
            confidence: 0.95
        });

    } catch (error) {
        console.error('Chatbot API error:', error);
        return NextResponse.json({
            success: false,
            error: 'Internal server error'
        }, { status: 500 });
    }
}
